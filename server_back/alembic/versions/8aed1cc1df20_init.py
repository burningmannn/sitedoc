"""init

Revision ID: 8aed1cc1df20
Revises: 53f3d2d4d383
Create Date: 2025-05-13 14:16:05.821518

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8aed1cc1df20'
down_revision: Union[str, None] = '53f3d2d4d383'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('route_steps')
    op.drop_table('document_recipients')
    op.drop_table('documents')
    op.drop_table('users')
    op.drop_table('notifications')
    op.drop_table('routes')
    op.drop_table('departments')
    op.drop_table('document_routes')
    op.drop_table('doc_types')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('doc_types',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('doc_types_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='doc_types_pkey'),
    sa.UniqueConstraint('name', name='doc_types_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('document_routes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('step_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='document_routes_pkey')
    )
    op.create_table('departments',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('departments_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='departments_pkey'),
    sa.UniqueConstraint('name', name='departments_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('routes',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('routes_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('appointed_user', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='routes_created_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='routes_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('file_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('message', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='notifications_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('department_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('create_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('admin', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name='users_department_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('username', name='users_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('documents',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('documents_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('filename', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('original_filename', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('file_path', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('file_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('doc_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('responsible', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('permanent', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('valid_until', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('uploaded_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('uploaded_by', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['doc_type_id'], ['doc_types.id'], name='documents_doc_type_id_fkey'),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], name='documents_uploaded_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='documents_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('document_recipients',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], name='document_recipients_document_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='document_recipients_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='document_recipients_pkey')
    )
    op.create_table('route_steps',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('route_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('responsible', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], name='route_steps_route_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='route_steps_pkey')
    )
    # ### end Alembic commands ###
